<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- 
		配置 CacheManager 
		1. 注意: 必须加入 ehcache 的 jar 包.
	-->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
    </bean>

	<!-- 配置 shiro 的 SecurityManager. shiro 最核心的组件 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="realm" ref="myRealmService"/>
    </bean>
    
    <!-- 可以自动调用配置在 IOC 容器中 shiro bean 的 init 和 destroy 方法 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

	<!-- 可以在 Spring 中使用 shiro 的权限注解. 但必须在配置了 LifecycleBeanPostProcessor 之后才可以使用 -->
   <!--  <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean> -->
    
    <!-- 配置 Shiro Filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        
        <!-- 登出之后返回到的页面 -->
        <property name="loginUrl" value="/index.jsp"/>
        <!-- 当没有访问权限时返回的页面 -->
        <property name="unauthorizedUrl" value="/unauthorized"/>
        <!-- 
        	配置实际上需要拦截的 URL 
        	1. anon: 可以被匿名访问. 即即使没有登录的情况下, 也可以访问
        	2. authc: 必须登录后才可以访问
        	3. 注意: URL 权限采取第一次匹配优先的方式
        	4. roles表示可以为URL访问匹配对应的权限
        -->
        <property name="filterChainDefinitions">
            <value>
                /index.jsp = anon
                /index = anon
                /shiro-logout = logout
          		/user/shiro-login = anon
          		/user/navigate = authc
                /static/** = anon
                
                /role/** = roles[role]
				/user/** = roles[user]
				/chance/** = roles[chance]
				/plan/** = roles[plan]
				/dict/** = roles[dict]
				/product/** = roles[product]
				/storage/** = roles[storage]
				/customer/** = roles[customer]
				/contact/** = roles[customer] 
                
                /** = authc
            </value>
        </property>
    </bean>

</beans>
