<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.crm.mapper.SalesChanceMapper">
	
	<select id="getAllUsers" resultType="com.atguigu.crm.entity.User">
		SELECT id,name FROM users
	</select>
	
	<select id="updateDispatch">
		UPDATE sales_chances SET status=#{status},designee_id=#{designee.id}, designee_date=#{designeeDate}
		WHERE id = #{id}
	</select>
	
	<!-- 把查询条件额外的提取出来. -->
	<sql id="chanceQueryCondition">
		WHERE status = #{status} AND created_user_id = #{createBy.id}
		<if test="custName != null">
			AND cust_name LIKE #{custName}
		</if>
		<if test="title != null">
			AND title LIKE #{title}
		</if>
		<if test="contact != null">
			AND contact LIKE #{contact}
		</if>
	</sql>
	
	<select id="getContent2" resultType="com.atguigu.crm.entity.SalesChance">
		SELECT *
		FROM(
			SELECT rownum rn, id, cust_name, title, contact, contact_tel, create_date
			FROM sales_chances
			<include refid="chanceQueryCondition"/>
		) s
		<![CDATA[
		WHERE rn >= #{fromIndex} AND rn < #{endIndex}
		]]>
	</select>
	
	<select id="getTotalElements2" resultType="long">
		SELECT count(id)
		FROM sales_chances 
		<include refid="chanceQueryCondition"/>
	</select>
	
	<resultMap type="com.atguigu.crm.entity.SalesChance" id="getByIdWithSalesPlan">
		<id column="id" property="id" />
		<result column="source" property="source" />
		<result column="title" property="title" />
		<result column="contact" property="contact" />
		<result column="cust_name" property="custName" />
		<result column="contact_tel" property="contactTel" />
		<result column="rate" property="rate" />
		<result column="description" property="description" />
		<result column="create_date" property="createDate" />
		<result column="designee.id" property="designee.id" />
		<result column="createBy.id" property="createBy.id" />
		<result column="designee.name" property="designee.name" />
		<result column="createBy.name" property="createBy.name" />
		<collection property="salesPlans" javaType="com.atguigu.crm.entity.SalesPlan">
			<id column="sp_id" property="id"/>
			<result column="plan_date" property="date"/>
			<result column="plan_result" property="result"/>
			<result column="todo" property="todo"/>	
		</collection>
	</resultMap>
	
	
	<select id="getByIdWithUser" resultMap="getByIdWithSalesPlan">
		SELECT s.id, source, title, cust_name, contact, contact_tel, rate, description, create_date, sp.plan_result, sp.plan_date, sp.todo, sp.id AS "sp_id", u1.name AS "createBy.name", u2.name AS "designee.name", s.created_user_id AS "createBy.id", s.designee_id AS "designee.id"
	    FROM sales_chances s
	    LEFT OUTER JOIN users u1
	    ON u1.id = s.created_user_id 
	    LEFT OUTER JOIN users u2
	    ON u2.id = s.designee_id
	    LEFT OUTER JOIN sales_plan sp
	    ON sp.chance_id = s.id
	    WHERE s.id = #{id} 
	    ORDER BY s.id
	</select>
	
	<select id="getById" resultType="com.atguigu.crm.entity.SalesChance">
		SELECT s.id, source, title, cust_name, contact, contact_tel, rate, description, create_date
		FROM sales_chances s
		WHERE s.id = #{id}
	</select>
	
	<update id="update">
		UPDATE sales_chances SET source = #{source}, title = #{title}, 
		cust_name = #{custName}, contact = #{contact}, contact_tel = #{contactTel}, 
		rate = #{rate}, description = #{description}
		WHERE id = #{id}
	</update>
	
	<update id="updateFinishStatus">
		UPDATE sales_chances SET status = #{status} 
		WHERE id = #{id}
	</update>
	
	<delete id="delete">
		DELETE FROM sales_chances
		WHERE id = #{id}
	</delete>
	
	<!--  
	主键需要使用序列生成. 
	-->
	<insert id="save">
		INSERT INTO sales_chances(id, source, title, cust_name, contact, contact_tel, rate, description, created_user_id, create_date, status)
		VALUES(crm_seq.nextval, #{source}, #{title}, #{custName}, #{contact}, #{contactTel}, #{rate}, #{description}, #{createBy.id}, #{createDate}, #{status})
	</insert>
	
	<!--  
	Oracle 的分页需要借助于 rownum
	1. rownum 本身不支持 > 和 >=
	SELECT rownum rn, id, cust_name, title, contact, contact_tel, create_date
	FROM sales_chances
	WHERE rownum > 5
	
	2. 但使用子查询之后可以
	SELECT *
	FROM(
		SELECT rownum rn, id, cust_name, title, contact, contact_tel, create_date
		FROM sales_chances
	)
	WHERE rn > 5
	
	3. 区间一定是半闭半开, 或半开半闭. 
	-->
	<select id="getContent" resultType="com.atguigu.crm.entity.SalesChance">
		SELECT *
		FROM(
			SELECT rownum rn, id, cust_name, title, contact, contact_tel, create_date
			FROM sales_chances
			WHERE status = #{status} AND created_user_id = #{createBy.id}
		) s
		<![CDATA[
		WHERE rn >= #{fromIndex} AND rn < #{endIndex}
		]]>
	</select>

	<select id="getTotalElements" resultType="long">
		SELECT count(id)
		FROM sales_chances 
		WHERE status = #{status} AND created_user_id = #{createBy.id}
	</select>

	<update id="updateStop">
		UPDATE sales_chances
		SET status=4
		WHERE id=#{id}
	</update>

</mapper>